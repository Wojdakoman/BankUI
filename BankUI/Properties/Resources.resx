<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="account" xml:space="preserve">
    <value>Konto</value>
    <comment>menu</comment>
  </data>
  <data name="accountAdded" xml:space="preserve">
    <value>Pomyślnie otwarto nowe konto!</value>
  </data>
  <data name="accountNumber" xml:space="preserve">
    <value>Numer konta</value>
  </data>
  <data name="activeAccount" xml:space="preserve">
    <value>Aktywne konto: </value>
    <comment>menu</comment>
  </data>
  <data name="addres" xml:space="preserve">
    <value>Adres</value>
  </data>
  <data name="amount" xml:space="preserve">
    <value>Wartość</value>
  </data>
  <data name="assignedAccount" xml:space="preserve">
    <value>Przypisane konto</value>
  </data>
  <data name="atm" xml:space="preserve">
    <value>Bankomat</value>
  </data>
  <data name="attention" xml:space="preserve">
    <value>Uwaga</value>
  </data>
  <data name="back" xml:space="preserve">
    <value>Powrót</value>
    <comment>menu</comment>
  </data>
  <data name="balance" xml:space="preserve">
    <value>Saldo: </value>
  </data>
  <data name="birthDate" xml:space="preserve">
    <value>Data urodzenia</value>
  </data>
  <data name="cardAdded" xml:space="preserve">
    <value>Dodano nową kartę do konta. PIN:</value>
  </data>
  <data name="cardDataUpdated" xml:space="preserve">
    <value>Zaktualizowano dane karty</value>
  </data>
  <data name="cardDelConfirm" xml:space="preserve">
    <value>Na pewno usunąć kartę? Tej operacji nie można cofnąć!</value>
  </data>
  <data name="cardNumber" xml:space="preserve">
    <value>Numer karty</value>
  </data>
  <data name="cards" xml:space="preserve">
    <value>Karty</value>
    <comment>menu</comment>
  </data>
  <data name="city" xml:space="preserve">
    <value>Miasto</value>
  </data>
  <data name="connect" xml:space="preserve">
    <value>Połącz</value>
  </data>
  <data name="countMonths" xml:space="preserve">
    <value>Ile miesięcy:</value>
  </data>
  <data name="dataUpdated" xml:space="preserve">
    <value>Zaktualizowano dane osobowe</value>
  </data>
  <data name="date" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="DBerror" xml:space="preserve">
    <value>Błąd połączenia z bazą danych!</value>
  </data>
  <data name="deleteAccount" xml:space="preserve">
    <value>Zamknij konto</value>
    <comment>menu</comment>
  </data>
  <data name="deleteCard" xml:space="preserve">
    <value>Usuń kartę</value>
  </data>
  <data name="deposit" xml:space="preserve">
    <value>Wplata</value>
  </data>
  <data name="description" xml:space="preserve">
    <value>Opis</value>
  </data>
  <data name="details" xml:space="preserve">
    <value>Szczegóły</value>
  </data>
  <data name="differentLogin" xml:space="preserve">
    <value>Podaj inny login</value>
  </data>
  <data name="differentPESEL" xml:space="preserve">
    <value>Wpisz inny pesel</value>
  </data>
  <data name="execute" xml:space="preserve">
    <value>Wykonaj</value>
  </data>
  <data name="expireDate" xml:space="preserve">
    <value>Data ważności</value>
  </data>
  <data name="fromAccount" xml:space="preserve">
    <value>Z konta</value>
  </data>
  <data name="hour" xml:space="preserve">
    <value>Godzina</value>
  </data>
  <data name="installment" xml:space="preserve">
    <value>Wysokość raty</value>
  </data>
  <data name="interest" xml:space="preserve">
    <value>Oprocentowanie</value>
  </data>
  <data name="IPAddres" xml:space="preserve">
    <value>Adres IP</value>
  </data>
  <data name="lackMoney" xml:space="preserve">
    <value>Brak wystarczającej ilości środków na koncie</value>
  </data>
  <data name="limitExceed" xml:space="preserve">
    <value>Przekroczono limit dzienny</value>
  </data>
  <data name="loanPaid" xml:space="preserve">
    <value>Spłacono kredyt!</value>
  </data>
  <data name="loanPaymentTitle" xml:space="preserve">
    <value>Spłata raty</value>
  </data>
  <data name="loans" xml:space="preserve">
    <value>Kredyty</value>
    <comment>menu</comment>
  </data>
  <data name="loanTaken" xml:space="preserve">
    <value>Pomyślnie zaciągnięto kredyt</value>
  </data>
  <data name="loanValue" xml:space="preserve">
    <value>Wartość kredytu</value>
  </data>
  <data name="login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="loginError" xml:space="preserve">
    <value>Błędny login lub hasło!</value>
  </data>
  <data name="loginHeader" xml:space="preserve">
    <value>Logowanie do systemu</value>
  </data>
  <data name="loginHistory" xml:space="preserve">
    <value>Historia logowań</value>
    <comment>menu</comment>
  </data>
  <data name="loginIn" xml:space="preserve">
    <value>Zaloguj</value>
  </data>
  <data name="loginOccupied" xml:space="preserve">
    <value>Podany login jest już zajęty</value>
  </data>
  <data name="loginResult" xml:space="preserve">
    <value>Logowanie poprawne</value>
  </data>
  <data name="logout" xml:space="preserve">
    <value>Wyloguj</value>
    <comment>menu</comment>
  </data>
  <data name="myData" xml:space="preserve">
    <value>Moje dane</value>
    <comment>menu</comment>
  </data>
  <data name="name" xml:space="preserve">
    <value>Imię</value>
  </data>
  <data name="newAccount" xml:space="preserve">
    <value>Otwórz konto</value>
    <comment>menu</comment>
  </data>
  <data name="newAccountConfirm" xml:space="preserve">
    <value>Na pewno chcesz otworzyć nowe konto?</value>
  </data>
  <data name="newCard" xml:space="preserve">
    <value>Nowa karta</value>
    <comment>menu</comment>
  </data>
  <data name="operationHistory" xml:space="preserve">
    <value>Historia operacji</value>
  </data>
  <data name="operationSuccessful" xml:space="preserve">
    <value>Operacja wykonana poprawnie</value>
  </data>
  <data name="operationType" xml:space="preserve">
    <value>Rodzaj operacji</value>
  </data>
  <data name="paidBack" xml:space="preserve">
    <value>Spłacono</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>Hasło</value>
  </data>
  <data name="payDate" xml:space="preserve">
    <value>Data spłaty</value>
  </data>
  <data name="payInstallment" xml:space="preserve">
    <value>Spłać ratę</value>
  </data>
  <data name="paymentLimit" xml:space="preserve">
    <value>Limit płatności</value>
  </data>
  <data name="PESEL" xml:space="preserve">
    <value>PESEL</value>
  </data>
  <data name="PESELexists" xml:space="preserve">
    <value>Podany pesel istnieje już w naszej bazie</value>
  </data>
  <data name="pin" xml:space="preserve">
    <value>Pin</value>
  </data>
  <data name="recipient" xml:space="preserve">
    <value>Odbiorca</value>
  </data>
  <data name="sender" xml:space="preserve">
    <value>Nadawca</value>
  </data>
  <data name="signUp" xml:space="preserve">
    <value>Rejestracja</value>
  </data>
  <data name="success" xml:space="preserve">
    <value>Sukces</value>
  </data>
  <data name="surname" xml:space="preserve">
    <value>Nazwisko</value>
  </data>
  <data name="takeLoan" xml:space="preserve">
    <value>Weź kredyt</value>
    <comment>menu</comment>
  </data>
  <data name="telephone" xml:space="preserve">
    <value>Telefon</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>Tytuł</value>
  </data>
  <data name="transfers" xml:space="preserve">
    <value>Przelewy</value>
    <comment>menu</comment>
  </data>
  <data name="transferSuccess" xml:space="preserve">
    <value>Pomyślnie wykonano przelew</value>
  </data>
  <data name="update" xml:space="preserve">
    <value>Zaktualizuj</value>
  </data>
  <data name="withdraw" xml:space="preserve">
    <value>Wyplata</value>
  </data>
</root>